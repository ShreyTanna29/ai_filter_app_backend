model FeatureGraphic {
  id         Int      @id @default(autoincrement())
  endpoint   String   @unique
  graphicUrl String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  role         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  sessions     Session[]
  refreshToken RefreshToken?
}

model Session {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime @default(dbgenerated("(now() + interval '7 days')"))
}

model GeneratedVideo {
  id        Int      @id @default(autoincrement())
  feature   String
  url       String // Cloudinary URL
  createdAt DateTime @default(now())
}

model Template {
  id          Int                 @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  steps       TemplateStep[]
  stepVideos  TemplateStepVideo[]
}

model TemplateStep {
  id         Int      @id @default(autoincrement())
  template   Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
  templateId Int
  endpoint   String // The API endpoint to call
  prompt     String // Custom prompt for this step
  order      Int // Order of execution
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model TemplateStepVideo {
  id         Int      @id @default(autoincrement())
  templateId Int
  stepIndex  Int
  endpoint   String
  videoUrl   String
  createdAt  DateTime @default(now())

  template Template @relation(fields: [templateId], references: [id], onDelete: Cascade)
}
